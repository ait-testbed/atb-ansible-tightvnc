- name: Install TightVNC server and xfce4
  ansible.builtin.package:
    name:
      - tightvncserver
      - xfce4 
      - xfonts-100dpi
      - xfonts-75dpi
      - fonts-dejavu
      - xfonts-scalable
    state: present

- name: Check if vnc_user is defined
  ansible.builtin.debug:
    msg: "vnc_user is set to {{ vnc_user }}"

- name: Create .vnc directory
  ansible.builtin.file:
    path: "/home/{{ vnc_user }}/.vnc"
    state: directory
    mode: '0700'  # Set permissions so only the user can access

- name: Ensure VNC passwd file exists
  ansible.builtin.file:
    path: "/home/{{ vnc_user }}/.vnc/passwd"
    state: touch
    mode: '0600'
    owner: "{{ vnc_user }}"
  become: yes

- name: Set VNC password
  ansible.builtin.command:
    cmd: echo "{{ vnc_password }}" | /usr/bin/vncpasswd -f
    chdir: "/home/{{ vnc_user }}/.vnc"
  become: yes

- name: Set permissions on the passwd file
  ansible.builtin.file:
    path: "/home/{{ vnc_user }}/.vnc/passwd"
    mode: '0600'
    owner: "{{ vnc_user }}"
  become: yes

- name: Set xstartup file
  ansible.builtin.template:
    src: xstartup.j2
    dest: /home/{{ vnc_user }}/.vnc/xstartup
  become: yes


- name: Configure VNC server
  ansible.builtin.template:
    src: vncserver.j2
    dest: /etc/systemd/system/vncserver.service
  become: yes
  notify: reload systemd

# handlers/main.yml
- name: reload systemd
  ansible.builtin.systemd:
    daemon_reload: yes


- name: Unmask VNC server service
  ansible.builtin.systemd:
    name: vncserver.service
    masked: no
  become: yes
  notify: reload systemd


# handlers/main.yml
- name: reload systemd
  ansible.builtin.systemd:
    daemon_reload: yes


- name: Start and enable VNC server service
  ansible.builtin.systemd:
    name: vncserver.service
    enabled: yes
    state: started
